function XElement(t){if(this.attrs={},this.children=[],this.events={},this.funcs={},this.tempAttrs=[],this.vars=[],this.funcData={},this._renderVersion=-1,t.el&&!t.view&&!this.noBuild)throw new Error("XElement requires a view to be set if it's going to attempt to build");for(var e in t)this[e]=t[e];this.parent&&(this.noLink=this.parent.noLink),(this.el||this.noBuild)&&this.build()}XElement.prototype.renderString=function(t,e){return t.render.map(function(i){if("number"==typeof i){if(e&&e[t.vars[i]]){var n=e[t.vars[i]];return n instanceof Function?n.call(e,this):e[t.vars[i]]}return""}return i}).join("")},XElement.prototype.build=function(){this.el.XElement=this;for(var t=[],e=0;e<this.el.attributes.length;e++){var i=this.el.attributes[e],n=this.variablePosition(i.value);if(t.push(n),0===i.name.indexOf("x-")){var s=i.name.substr(2);this.extend[s]?this.funcs[s]={group:n,fn:new this.extend[s]}:console.warn("x-"+s+" is not a valid function @",this.el),this.el.removeAttribute(i.name),e--}else n.vars.length&&(this.attrs[i.name]=n)}this.runFuncs("build"),Array.prototype.forEach.call(this.el.childNodes,function(e){if(!(e instanceof Text)){var i=new XElement({view:this.view,el:e,parent:this});return i.index=this.children.length,this.children.push(i)}var n=this.variablePosition(e.nodeValue);t.push(n),e.XElement={el:e,render:n},n.vars&&this.children.push(e.XElement)}.bind(this)),this.noLink||t.forEach(function(t){t.vars.forEach(function(t){this.vars.indexOf(t)<0&&(this.vars.push(t),this.view&&(this.view.usesVars[t]=this.view.usesVars[t]||[],this.view.usesVars[t].push(this))),this.parent&&this.parent.vars.indexOf(t)<0&&this.parent.vars.push(t)}.bind(this))}.bind(this))},XElement.prototype.variablePosition=function(t){var e=/\${([^}]*)}/g,i={vars:[],render:[t]};return t.replace(e,function(t,e){var n=i.vars.indexOf(e),s=i.render[i.render.length-1];n<0&&(n=i.vars.push(e)-1),(s=s.split("${"+e+"}")).splice(1,0,n),i.render.splice(-1,1),i.render=i.render.concat(s)}.bind(this)),i},XElement.prototype.runFuncs=function(t){for(var e in this.funcs){var i=this.renderString(this.funcs[e].group,this.data);this.funcs[e].fn[t]&&this.funcs[e].fn[t](i,this)}},XElement.prototype.render=function(t){if(this.data=t||this.data,!this.data)for(var e=this.parent;!this.data&&e;)this.data=e.data,e=e.parent;this.parent&&this.runFuncs("render"),this.tempAttrs.forEach(function(t){this.el.removeAttribute(t)}.bind(this));for(var i in this.attrs)this.el.setAttribute(i,this.renderString(this.attrs[i],this.data));for(var n in this.events)this.events[n].forEach(function(t){this.el.addEventListener(n,t)}.bind(this));return this.children.forEach(function(t){t instanceof XElement&&this.noLink?t.render(this.data):t.el instanceof Text&&(t.el.nodeValue=this.renderString(t.render,this.data))}.bind(this)),this.el},XElement.prototype.useVar=function(t){this.vars.indexOf(t)<0&&(this.vars.push(t),this.view.usesVars[t]=this.view.usesVars[t]||[],this.view&&this.view.usesVars[t].indexOf(this)<0&&this.view.usesVars[t].push(this)),this.parent&&this.parent.vars.indexOf(t)<0&&this.parent.vars.push(t)},XElement.prototype.tempAttr=function(t,e){this.el.setAttribute(t,e),this.tempAttrs.indexOf(t)<0&&this.tempAttrs.push(t)},XElement.prototype.cloneableProperties=["index","attrs","funcs","events","tempAttrs","noLink"],XElement.prototype.copy=function(t){function e(t){if("object"!=typeof t||Array.isArray(t))return t;var i={};for(var n in t)i[n]=e(t[n]);return i}var i={view:this.view,el:this.el.cloneNode(),noBuild:!0};for(var n in t)i[n]=t[n];var s=new XElement(i);return s.parent=parent,this.cloneableProperties.forEach(function(t){s[t]=e(this[t])}.bind(this)),Array.prototype.forEach.call(this.el.childNodes,function(t){if(t.XElement){var e;e=(t=t.XElement)instanceof XElement?t.copy({parent:s}):{el:t.el.cloneNode(),render:t.render},s.el.appendChild(e.el),s.children.push(e)}else s.appendChild(t)}),s},XElement.prototype.extend={};